services:
  metabase:
    image: metabase/metabase:v0.48.7
    container_name: metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: postgres
      MB_DB_PASS: postgres
      MB_DB_HOST: postgres
    depends_on:
      - postgres
    networks:
      - kafka-network
  
  postgres:
      image: postgres:15
      restart: always
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: elevator_events
      volumes:
        - ./init-db:/docker-entrypoint-initdb.d 
      ports:
        - "5432:5432"
      networks:
        - kafka-network
    
  kafka:
    image: bitnami/kafka:3.5
    restart: on-failure
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NUM_PARTITIONS=3
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=ExampleCluster2
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - kafka-network

  producer:
    container_name: producer
    build:
      context: .
      dockerfile: Dockerfile.producer
    env_file:
      - .env
    depends_on:
      - kafka
    networks:
      - kafka-network

  consumer:
    container_name: consumer
    build:
      context: .
      dockerfile: Dockerfile.consumer
    env_file:
      - .env
    depends_on:
      - kafka
      - postgres
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
